AWSTemplateFormatVersion: '2010-09-09'
Description: 'Translation service using existing S3 buckets and IAM role'

Resources:
  # 1. IAM Policy that references EXISTING buckets
  TranslateS3Policy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: TranslateAndS3AccessPolicy-violette
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
            Resource: 'arn:aws:s3:::request-bucket-violette/*'
          - Effect: Allow
            Action:
              - s3:PutObject
            Resource: 'arn:aws:s3:::response-bucket-violette/*'
          - Effect: Allow
            Action: translate:TranslateText
            Resource: '*'

  # 2. Policy Attachment to EXISTING role
  PolicyAttachment:
    Type: AWS::IAM::RolePolicyAttachment
    Properties:
      RoleName: TranslateLambdaExecutionRole  # Your existing role name
      PolicyArn: !Ref TranslateS3Policy

  # 3. Lambda Function using EXISTING role
  S3TranslationFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: S3TranslationFunction-violette
      Runtime: python3.9
      Role: arn:aws:iam::852571914072:role/TranslateLambdaExecutionRole  # Full ARN of your existing role
      Handler: s3_translator.lambda_handler
      Code:
        S3Bucket: lambda-code-bucket-violette
        S3Key: s3_function.zip
      Timeout: 300
      Environment:
        Variables:
          RESPONSE_BUCKET: 'response-bucket-violette'

  # 4. Lambda Permission for S3
  S3LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref S3TranslationFunction
      Principal: s3.amazonaws.com
      SourceArn: 'arn:aws:s3:::request-bucket-violette'

Outputs:
  LambdaFunctionName:
    Description: Name of the Lambda function
    Value: !Ref S3TranslationFunction
  PolicyARN:
    Description: ARN of the IAM Policy
    Value: !Ref TranslateS3Policy